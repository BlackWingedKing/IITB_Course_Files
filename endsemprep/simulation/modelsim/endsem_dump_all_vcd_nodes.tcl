# Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
# Your use of Altera Corporation's design tools, logic functions 
# and other software and tools, and its AMPP partner logic 
# functions, and any output files from any of the foregoing 
# (including device programming or simulation files), and any 
# associated documentation or information are expressly subject 
# to the terms and conditions of the Altera Program License 
# Subscription Agreement, the Altera Quartus Prime License Agreement,
# the Altera MegaCore Function License Agreement, or other 
# applicable license agreement, including, without limitation, 
# that your use is for the sole purpose of programming logic 
# devices manufactured by Altera and sold by Altera or its 
# authorized distributors.  Please refer to the applicable 
# agreement for further details.


# ***************************************************************************
# ***************************************************************************
# 
# File:		/home/ritesh/Desktop/endsemprep/simulation/modelsim/endsem_dump_all_vcd_nodes.tcl
# 
# Description:	Script for ModelSim-Altera (VHDL) VCD File Dumping
# 		This script is used to direct ModelSim-Altera (VHDL) to dump
# 		all nodes in the design to a VCD output file
# 
# Usages:	/home/ritesh/Desktop/endsemprep/simulation/modelsim/endsem_dump_all_vcd_nodes.tcl
# 
# Generated by:	Quartus Prime
# 		Version 16.0.0 Build 211 04/27/2016 SJ Lite Edition
# 
# Date:		Sat Apr 21 15:14:29 2018
# 
# Design:	endsem
# 
# ***************************************************************************
# ***************************************************************************

# ----------------------------------------------------------------
#
proc add_vcd_signals { hierarchy vcd_filename } {
#
# Description:	This function directs ModelSim-Altera (VHDL) to print out the
#		appropriate VCD signals, with the hierarchy level
#		prepended to each signal name
#
# ----------------------------------------------------------------

   catch { vcd add "$hierarchy/y" }
   catch { vcd add "$hierarchy/d_2_aQ_aregout" }
   catch { vcd add "$hierarchy/x_acombout" }
   catch { vcd add "$hierarchy/x" }
   catch { vcd add "$hierarchy/d_1_aQ_aregout" }
   catch { vcd add "$hierarchy/r_acombout" }
   catch { vcd add "$hierarchy/r" }
   catch { vcd add "$hierarchy/a4_ac_a0_combout" }
   catch { vcd add "$hierarchy/CLK_acombout" }
   catch { vcd add "$hierarchy/CLK" }
}

# ----------------------------------------------------------------
#
proc main { argv } {
#
# Description:	Main entry point to script.  Iterate over all
#		hierarchy levels specified, and direct ModelSim-Altera (VHDL)
#		to print the relevant signals under each level
#
# ----------------------------------------------------------------

   set vcd_filename "endsem.vcd"
   set hierarchy "dut"

   vcd file "$vcd_filename"
   vcd on

   add_vcd_signals $hierarchy $vcd_filename
}

main $argv
